(()=>{var e={368:e=>{e.exports="varying vec2 vUv;\n// uniform sampler2D uTexture;\n// uniform float uTime;\n\n\nvoid main() {\n  // vec4 texture = texture2D(uTexture, vUv);\n  \n  gl_FragColor = vec4(vUv, 1.0, 1.0);\n}"},403:e=>{e.exports="varying vec2 vUv;\n// uniform vec2 uAspectRatio;\n\n\nvoid main() {\n  // vUv = (uv - vec2(0.5)) * uAspectRatio + vec2(0.5);\n  vUv = uv;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\n}"}},n={};function i(t){var r=n[t];if(void 0!==r)return r.exports;var o=n[t]={exports:{}};return e[t](o,o.exports,i),o.exports}i.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return i.d(n,{a:n}),n},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";var e=i(403),n=i.n(e),t=i(368),r=i.n(t);const o=new THREE.WebGLRenderer({canvas:document.getElementById("canvas")});o.setPixelratio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight),o.setClearColor("#0F111a",1),o.physicallyCorrectLights=!0,o.outputEncoding=THREE.sRGBEncoding;const a=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,.001,1e3);a.position.set(0,0,2);const d=new OrbitControls(a,o.domElement);d.enableDamping=!0,d.dampingFactor=.05;const s=new THREE.Scene,v=new THREE.PlaneBufferGeometry(1,1,32,32),u=new THREE.ShaderMaterial({extensions:{derivatives:"#extention GL_OES_standard_derivatives : enable"},uniforms:{uTime:{value:0}},side:THREE.DoubleSide,wireframe:!0,vertexShader:n(),fragmentShader:r()}),c=new THREE.Mesh(v,u);s.add(c);const w=()=>{o.setSize(window.innerWidth,window.innerHeight),a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix()};w(),window.addEventListener("resize",w),function e(){requestAnimationFrame(e),u.uniforms.uTime.value+=.05,d.update(),o.render(s,a)}()})()})();